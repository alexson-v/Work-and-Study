'use strict';

/**
 *  В этом уроке обсуждается загрузка скриптов на страницу, как можно её оптимизировать и
 *  как правильно это делать.
 *  ---
 *  Типичной проблемой новичков является то, что они помещают скриптовые файлы не в конец
 *  тэга <body>, а в тэг <head>, что приводит к 2 загвоздкам:
 *  ---
 *  1) Страница ещё не построилась. Если в скрипте происходит взаимодействие с DOM-узлами,
 *  то скрипт будет выдавать ошибки.
 *  2) Скрипты блокируют страницу во время её загрузки. Если скрипт очень объёмный или сервер,
 *  на котором размещён скрипт, подвисает, то прогружаться дальше страница не будет.
 *  ---
 *  Первая проблема частично решается при помощи события 'DOMContentLoaded', но от второй
 *  проблемы так просто избавиться не получиться.
 *  ---
 *  Даже если скриптовые файлы будут находиться в конце тега <body> то, в случае огромного
 *  проекта, с длинной html-структурой и большим количеством js-кода, загрузка страницы всё равно
 *  будет виснуть (всё это будет сказываться, если у пользователя медленный интернет).
 *  ---
 *  Были придуманы 2 атрибута, которые позволяют решить эти проблемы: defer и async.
 *  (смотреть файл index.html)
 */

const p = document.querySelectorAll('p');
console.log(p);

/**
 *  Помимо создания обычных DOM-элементов с помощью метода createElement(), можно таким же образом
 *  создавать скриптовые файлы посредством JavaScript. Такой подход очень популярный, используется часто.
 */
function loadScript(src) {
	let script = document.createElement('script');
	script.src = src;
	/**
     *  В таком подходе есть своя особенность: динамически загружаемые скрипты, по умолчанию, ведут себя
     *  как скрипты с атрибутом async.
     *  Чтобы отключить такую опцию, можно обратиться непосредственно к свойству .async
     */
	script.async = false;
	document.body.append(script); // -> Этот скрипт начнёт выполняться только после того, как он добавится в HTML.
}

/**
 *  Из-за того, что действия по отношению к скрипту были обёрнуты в функцию, теперь появилась возможность добавлять
 *  на страницу новые скрипты динамически.
 */
loadScript('js/test.js');
loadScript('js/some.js');