"use strict";

/**
 *  В этом уроке говорится про такие понятия как массивы и псевдомассивы, про основные методы для
 *  работы с массивами.
 *  Массивы – это структуры, которые содержат элементы по порядку.
 *  ---
 *  Ознакомимся с наиболее частоиспользуемыми методами массивов.
 */

const arr = [1, 2, 3, 6, 8]; // объявление обыкновенного массива

// !! Как между собой соотносится свойство .length и порядковые номера у элементов массивов?
console.log(arr.length); // -> 5 (последний индекс массива + 1)

// Методы, которые работают с концом массива
arr.pop(); // -> [1, 2, 3, 6] - удалить последний элемент массива
arr.push(10); // ->[1, 2, 3, 6, 8, 10] - добавить последний элемент массива

/**
 *  Как правильно перебирать элементы массивов?
 *  Это можно сделать третя спрособами:
 */

// 1) Перебрать элементы массива обычным циклом
for (let i = 0; i < arr.length; i++) {
    console.log(arr[i]);
}
// 2) Перебрать элементы массива через конструкцию for-of (результат будет идентичный)
for (let value of arr) {
    console.log(value);
}

/**
 *  Исключения из правил в массивах. Когда массивы хранят информацию не по порядку?
 */
arr[99] = 0;
console.log(arr.length); // -> 100
console.log(arr); // -> [2, 3, 6, 8, 10, <94 empty items>, 0] - логика массива нарушена

/**
 *  Существуют следующие популярные методы массивов:
 */

// 1) Метод forEach() – позволяет гибко перебрать все элементы, которые находятся внутри массива.
arr.forEach(function(item, i, arr) {
    console.log(`${i}: ${item} внутри массива ${arr}`);
}); // конкретно этот метод будет очень часто использоваться на практике, так как его перебор очень удобно настраивать

/**
 *  2) Методы map(), every/some(), filter(), reduce() – это методы трансформации массивов. Они берут
 *  исходный код и модифицируют его. Будут обсуждаться далее.
 */

// 3) Метод split() – сформировать массив на основании строк.
const str = 'one, two, three, four, five';
const products = str.split(", "); // указываем, через какой разделитель будут элементы в строке
console.log(products); // -> ['one', 'two', 'three', 'four', 'five' ...]

// 4) Метод join() – перевести элементы массива в строку.
const toys = ['bear', 'ball', 123, 445];
const toysBack = toys.join('; '); // указываем, через какой разделитель будут элементы в строке
console.log(toysBack); // -> 'bear; ball; 123; 445'

// 5) Метод sort() – сортировать элементы массива по порядку.
let strs = 'zzz, bbb, aaa';
const strsSort = strs.split(", ");
console.log(strsSort.sort()); // -> ['aaa', 'bbb', 'zzz'] - в алфавитном порядке всё отображается корректно

/**
 *  ..но если попробовать то же самое с числами, то сортировка всё равно будет по алфавиту.
 *  Чтобы этого избежать, существует специальная сортировочная конструкция:
 */
strs = [68, 12, 45, 8];
function compareNum(a, b) {
    return a - b;
    /**
     *  Отнимаем одно число от другого. В методе sort() заложены определённые алгоритмы, а именно
     *  алгоритм быстрой сортировки.
     */
}
console.log(strs.sort(compareNum)); // -> [8, 12, 45, 68]

/**
 *  Псевдомассив – это объект, структура которого совпадает со структурой массива. У них нет никаких
 *  методов (forEach, filter, pop, join и т.д.)
 */