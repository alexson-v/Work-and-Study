"use strict";

/**
 *  В этом уроке будет обсуждаться простое взаимодействие между кодом и пользователем.
 *  ---
 *  JavaScript - это про работу с людьми. Обычный пользователь не лезет в консоль за получением
 *  информации. Для этого существует перечень специальных инструментов.
 */

alert('hello');
/**
 *  alert() - предупредить пользователя о чёмто важном. Это модальное окно невозможно изменить (как и все следующие).
 *  Оно выглядит в разных браузерах по-своему.
 */

const result = confirm("Are you here?");
console.log(result);
/**
 *  confirm(); - вопрос пользователю, на который можно ответить только 'Отмена' или 'Ок'.
 *  Если записать функцию в переменную, ответ сохранится (true/false).
 */

const answer = prompt("Вам есть 18?", "18");
/**
 *  prompt() - позволяет пользователю вписать ответ в окно собственноручно. Вторые кавычки нужно ставить
 *  по двум причинам:
 *  ---
 *  1) Для корректного отображения окна во всех браузерах;
 *  2) Для того, чтобы задать значение поля по-умолчанию.
 */
console.log(typeof(answer)); // С помощью оператора typeof() можно узнать, какой тип данных лежит в переменной.

/**
 *  !По-умолчанию вся информация, которая исходит от пользователя, будет в строчном формате.
 *  Но это можно обходить с помощью динамической типизации. Об этом дальше будет большой урок.
 */

const answerNum = +prompt("Вам есть 18?", "18"); // -> number
// Добавив + перед функцией, можно получить информацию уже не в строке, а в числах.
console.log(typeof(answerNum));


// Решение небольшой практической задачи с массивом
const answers = [];
answers[0] = prompt('Как вас зовут?', '');
answers[1] = prompt('Фамилия?', '');
answers[2] = prompt('Сколько вам лет?', '');
/**
 *  document.write(answers); - отобразить какое-либо значение на странице (в данном случае значения массива answers).
 *  В реальных проектах не используется, ибо заменяет собой всю вёрстку страницы.
 */

const emptyArr = [];
console.log(typeof(emptyArr)); // -> object
console.log(typeof(null)); // -> object
/**
 *  Получение object из null - это официально признанная ошибка JS, которая сложилась исторически.
 *  ---
 * 
 *  Такие команды как alert, confirm и prompt имеют ряд своих особенностей:
 *  1) Они блокируют построение html-страницы до того, как будут выполнены.
 *  2) При попытке запустить эти команды в VS Code, он ответит ...is not defined. Эти функции находятся
 *     исключительно в юрисдикции браузеров, редактор кода не сможет их идентефицировать.
 */