"use strict";

/**
 *  В этом уроке ещё раз будут обговорены аргументы функций и почему это важно.
 *  ---
 *  Функции - это оформленные действия в скриптах. Конечно, любые операции можно записать просто в потоке
 *  кода, но выполняться они будут лишь один раз, когда код дойдет до них.
 *  Если код нужно использовать несколько раз в будущем, то из него стоит создавать функцию.
 *  Например, пересчёт курса валют. Функция каждый раз получает новое значение для пересчёта.
 */

const usdCurr = 28;
const eurCurr = 32;

/**
 *  Самый важный момент с аргументами в том, что с помощью них функция становится универсальной.
 * 
 *  Если в функции привязать какое-нибудь жесткое значение, то потом будет проблематично отследить, как
 *  работает сама функция.
 */
function convert(amount, curr) {
    console.log(amount * curr);
}
/**
 *  Функция с самого начала не знает, какое значение введёт пользователь.
 *  Значение подставляется только во время вызова функции.
 *  ---
 *  В самом обозначении оно определяется как аргумент, который называется любым именем.
 */
convert(500, usdCurr);
convert(150, eurCurr); // при подставлении новых значений функцию не нужно исправлять (принцип универсальности).

/**
 *  Даже если потом функция приобретёт дополнительный код, его можно будет регулировать с помощью условий.
 *  ---
 *  Важность применения аргументов обосновывается принципом DRY - "Don't repeat yourself". Если создавать
 *  почти идентичные функции для отдельных действий, на выходе этот принцип будет нарушен, а код - будет плохим.
 */